<!DOCTYPE html>
<html>
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <meta http-equiv="Content-Security-Policy" content="default-src * data: gap: https://ssl.gstatic.com; style-src * 'unsafe-inline'; script-src * 'unsafe-inline' 'unsafe-eval'">
  <script src="components/loader.js"></script>
  <script src="lib/angular/angular.min.js"></script>
  <script src="lib/onsenui/js/onsenui.min.js"></script>
  <script src="lib/onsenui/js/angular-onsenui.min.js"></script>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script src="https://cdn.rawgit.com/naptha/tesseract.js/1.0.7/dist/tesseract.js"></script>

  <link rel="stylesheet" href="components/loader.css">
  <link rel="stylesheet" href="lib/onsenui/css/onsenui.css">
  <link rel="stylesheet" href="lib/onsenui/css/onsen-css-components.css">
  <link rel="stylesheet" href="css/style.css">
  </head>
  <body>
    <script>
  ons.bootstrap();
  document.addEventListener('init', function(event) {
  var page = event.target;

  if (page.id === 'page1') {
    page.querySelector('#push-button1').onclick = function() {
      document.querySelector('#navigator').pushPage('page2.html', {data: {title: 'Page 2'}});
    };
  } else if (page.id === 'page2') {
      document.querySelector('input').addEventListener('change', ev => {
        if (!ev.target.files || ev.target.files.length == 0) return;
        Promise.resolve(ev.target.files[0])
          .then(readFile)
          .then(sendAPI)
          .then(res => {
            contents = extractContent(res.responses[0].fullTextAnnotation.text);
            document.querySelector('#contents').innerHTML = contents.join("\n");
          })
          .catch(err => {
            console.log('FAILED:(', err);
            document.querySelector('#contents').innerHTML = JSON.stringify(err, null, 2);
          });
      });
      const api_key = `AIzaSyDP8DRHM9GWXn9MvFy4bGUzaVzFeBtiyUw`;
      const url = `https://vision.googleapis.com/v1/images:annotate`;
      // Send API Request to Cloud Vision API
      const sendAPI = (base64string) => {
        let body = {
          requests: [
            {image: {content: base64string}, features: [{type: 'TEXT_DETECTION'}]}
          ]
        };
        let xhr = new XMLHttpRequest();
        xhr.open('POST', `${url}?key=${api_key}`, true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        const p = new Promise((resolve, reject) => {
          xhr.onreadystatechange = () => {
            if (xhr.readyState != XMLHttpRequest.DONE) return;
            if (xhr.status >= 400) return reject({message: `Failed with ${xhr.status}:${xhr.statusText}`});
            resolve(JSON.parse(xhr.responseText));
          };
        })
        xhr.send(JSON.stringify(body));
        return p;
      }
      // Read input file
      const readFile = (file) => {
        let reader = new FileReader();
        const p = new Promise((resolve, reject) => {
          reader.onload = (ev) => {
            document.querySelector('img').setAttribute('src', ev.target.result);
            resolve(ev.target.result.replace(/^data:image\/(png|jpeg);base64,/, ''));
          };
        })
        reader.readAsDataURL(file);
        return p;
      };
      // Extract content from text
      const extractContent = (text) => {
        let result = [];
        Object.keys(description).forEach(function (key) {
          if (text.match(key)) {
            result.push(description[key])
          }
        });
        return result
      };
      const description = {
        "デキストリン" : "・デキストリンとはいい感じかも",

        "乳清たんぱく濃縮物" : "・乳清たんぱく濃縮物は栄養素っぽいやつ",

        "アスパルテーム" : "・サッカリンとも。アスパルテームは、人工甘味料の一つです。",

        "亜硝酸ナトリウム" : "・亜硝酸ナトリウムには非常に強い毒性、急性症状として嘔吐やチアノーゼ、動悸、血圧降下などの症状がある。",
      }
      }});
    </script>
  <ons-navigator swipeable id="navigator" page="page1.html"></ons-navigator>
  <template id="page1.html">
  <ons-page id="page1">
    <ons-toolbar>
    <div class="center">MVP</div>
    </ons-toolbar>

    <p>これはMVPです。</p>

    <ons-button id="push-button1">OCRを使う</ons-button>
  </ons-page>
  </template>

  <template id="page2.html">
  <ons-page id="page2">
    <ons-toolbar>
      <div class="left"><ons-back-button>戻る</ons-back-button></div>
      <div class="center">OCR</div>
    </ons-toolbar>
    <img style="max-width: 400px;"><input type="file" accept="image/*" />
      <pre id="contents"></pre>
      
    </ons-page>
  </template>
  </body>
</html>
